@model MultiPlug.Base.Http.EdgeApp

@functions
{
    string isConnected(bool theValue)
    {
        return (theValue) ? "<i class=\"icon-ok icon-large\"></i>" : "<i class=\"icon-remove icon-large\"></i>";
    }
}

<form action="" method="post" accept-charset="utf-8" enctype="application/x-www-form-urlencoded" autocomplete="off">
    <section class="row-fluid">

        <div class="row-fluid">
            <div class="box">
                <div class="span3">
                    <a href="#"><img alt="IFTTT Logo" src="@Raw(Model.Context.Paths.Assets)images/ifttt.png"></a>
                </div>
                <div class="span6">
                    <p style="font-size:22.75px; padding-top:10px; text-align: center;">Injector</p>
                </div>
                <div class="span3" style="text-align:right">
                    <button type="submit" value="submit" style="height:40px;" class="item btn"><i class="icon-save icon-large"></i> Save</button>
                </div>
            </div>
        </div>

        @Include("MultiPlug.Ext.IFTTT.IFTTTNavigation")

        <div class="row-fluid">
            <h3 class="box-header">
                Properties
            </h3>
            <div class="box non-collapsible">
                <div class="row-fluid">
                    <div class="span4">
                        <div class="row-fluid"><div class="span12">Event ID</div></div>
                        <div class="row-fluid">
                            <div class="span12">
                                <input type="hidden" name="Guid" value="@Model.Extension.Model.Guid">
                                <input name="EventId" class="input-block-level" type="text" placeholder="Event ID" value="@Model.Extension.Model.EventId">
                            </div>
                        </div>
                    </div>
                    <div class="span3">
                        <div class="row-fluid"><div class="span12">Event Description</div></div>
                        <div class="row-fluid"><div class="span12"><input name="EventDescription" class="input-block-level" type="text" placeholder="Description" value="@Model.Extension.Model.EventDescription"></div></div>
                    </div>
                </div>


            </div>
        </div>

        <div class="row-fluid">
            <div class="span6">
                <h3 class="box-header">
                    Subscriptions
                </h3>
                <div class="box non-collapsible">
                    <div class="row-fluid">
                    </div>
                    <ul id="Subscriptions" style="list-style: none;">
                        @for (int i = 0; i < @Model.Extension.Model.SubscriptionGuid.Length; i++)
                        {
                            <li>
                                <div class="control-group">
                                    <div class="controls">
                                        <div class="span2">
                                            <button value="@Model.Extension.Model.SubscriptionGuid[i]" type="button" class="item btn btn-red delete-sub"><i class="icon-trash icon-large"></i></button>
                                        </div>
                                        <div class="span9">
                                            <input name="SubscriptionGuid" type="hidden" value="@Model.Extension.Model.SubscriptionGuid[i]" />
                                            <input name="SubscriptionId" type="text" value="@Model.Extension.Model.SubscriptionId[i]" class="input-block-level mp-event-picker">
                                        </div>
                                        <div class="span1">
                                            @Raw(isConnected(Model.Extension.Model.SubscriptionConnected[i]))
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    <ul style="list-style: none;">
                        <li>
                            <div class="control-group">
                                <div class="controls">
                                    <div class="span2">
                                        <button type="button" id="NewSubscription" class="btn btn-green"><i class="icon-plus"></i></button>
                                    </div>
                                    <div class="span10">
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>

                </div>
            </div>

            <div class="span6">
                <h3 class="box-header">
                    Injected Data
                </h3>
                <div class="box non-collapsible">

                    <ul style="list-style: none;">
                        <li>
                            <div class="row-fluid">
                                <div class="span2">

                                </div>

                                <div class="span5">
                                    Subject
                                </div>
                                <div class="span5">
                                    Value
                                </div>

                            </div>
                        </li>
                    </ul>
                    <ul id="InjectedSubjects" style="list-style: none;">
@for (int i = 0; i < @Model.Extension.Model.Subject.Length; i++)
{
                            <li>
                                <div class="row-fluid">
                                    <div class="span2">
                                        <button type="button" class="item btn btn-red delete-datapair"><i class="icon-trash icon-large"></i></button>
                                    </div>
                                    <div class="span5">
                                        <input type="text" name="Subject" class="span12" value="@Model.Extension.Model.Subject[i]">
                                    </div>
                                    <div class="span5">
                                        <input type="text" name="Value" class="span12" placeholder="" value="@Model.Extension.Model.Value[i]">
                                    </div>

                                </div>
                            </li>
}
                    </ul>
                    <ul style="list-style: none;">
                        <li>
                            <div class="control-group">
                                <div class="controls">
                                    <div class="span2">
                                        <button type="button" id="NewInjectedSubject" class="btn btn-green"><i class="icon-plus"></i></button>
                                    </div>
                                    <div class="span10">
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>

                </div>
            </div>
        </div>

    </section>
</form>

<script type="text/javascript" src="@Raw(Model.Context.Paths.Assets)js/jquery.dirty.min.js"></script>
<script>

@if ( string.IsNullOrEmpty( Model.Extension.Model.Guid))
{
    <text>$("form").dirty("setAsDirty");</text>
}
    function newSubElement() {
        return '<li>\
            <div class="control-group">\
                <div class="controls">\
                    <div class="span2">\
                    </div>\
                    <div class="span9">\
                        <input name="SubscriptionGuid" type="hidden" value="">\
                        <input name="SubscriptionId" type="text" value="" class="input-block-level mp-event-picker">\
                    </div>\
                    <div class="span1">\
                        <i class=\"icon-remove icon-large\"></i>\
                    </div>\
                </div>\
            </div>\
        </li>';
    }

    function newInjectedSubjectElement() {
        return '<li>\
        <div class="row-fluid">\
            <div class="span2">\
                <button type="button" class="item btn btn-red delete-datapair"><i class="icon-trash icon-large"></i></button>\
            </div>\
            <div class="span5">\
                <input type="text" name="Subject" class="span12" value="">\
            </div>\
            <div class="span5">\
                <input type="text" name="Value" class="span12" placeholder="" value="">\
            </div>\
        </div>\
    </li>';
    }

    function ApplyDelete(theSelector) {
        $(theSelector).on('click', '.delete-sub', function () {
            var id = $(this).attr('value');
            var closestli = $(this).closest("li");
            if (confirm("Delete the Subscription?")) {
                $.ajax({
                    type: "POST",
                    url: '@Raw(Model.Context.Paths.Current)subscriptiondelete/?id=@Model.Extension.Model.Guid&subid=' + id,
                    success: function () {
                        closestli.remove();
                    }
                });
            }
        });
    }

    function ApplyInjectedSubjectDelete(theSelector) {
        $(theSelector).on('click', '.delete-datapair', function () {
            var id = $(this).attr('value');
            var closestli = $(this).closest("li");
            closestli.remove();
            $("form").dirty("setAsDirty");
        });
    }

    $('#NewSubscription').on('click', function () {
        $('#Subscriptions').append(newSubElement());
        var NewAggregateSubscription = $('#Subscriptions li:last-child');
        applyMPEventPickerOnClick();
        ApplyDelete(NewAggregateSubscription.find(':button'));
        $("form").dirty("setAsDirty");
    });

    $('#NewInjectedSubject').on('click', function () {
        $('#InjectedSubjects').append(newInjectedSubjectElement());
        var NewDataPair = $('#InjectedSubjects li:last-child');
        ApplyInjectedSubjectDelete(NewDataPair.find(':button'));
        $("form").dirty("setAsDirty");
    });

    ApplyDelete(document);
    ApplyInjectedSubjectDelete(document);

</script>
