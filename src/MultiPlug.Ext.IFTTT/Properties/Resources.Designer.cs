//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiPlug.Ext.IFTTT.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MultiPlug.Ext.IFTTT.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;About&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3&quot; style=&quot;text-align: right;&quot;&gt;
        ///            &lt;/d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid&quot;&gt;
        ///            &lt;div class=&quot;box&quot;&gt;
        ///                &lt;div class=&quot;span5&quot;&gt;
        ///                    &lt;a href=&quot;/&quot;&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Aggregator {
            get {
                return ResourceManager.GetString("Aggregator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;Aggregators&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Aggregators {
            get {
                return ResourceManager.GetString("Aggregators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///
        ///    string CurrentValue(string[] theValues, int theIndex)
        ///    {
        ///        if(theIndex &lt; theValues.Length)
        ///        {
        ///            return theValues[theIndex];
        ///        }
        ///        return string.Empty;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-ww [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Cache {
            get {
                return ResourceManager.GetString("Cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;Caches&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Caches {
            get {
                return ResourceManager.GetString("Caches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///
        ///    string isEnabled(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;checked&quot; : &quot;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid&quot;&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Counter {
            get {
                return ResourceManager.GetString("Counter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;Counters&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Counters {
            get {
                return ResourceManager.GetString("Counters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;div class=&quot;row-fluid&quot;&gt;
        ///    &lt;div class=&quot;box&quot;&gt;
        ///        &lt;div class=&quot;span3&quot;&gt;
        ///            &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;span6&quot;&gt;
        ///            &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;Multiplug.Ext.IFTTT&lt;/p&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;span3&quot;&gt;
        ///        &lt;/div&gt;
        ///    &lt;/div&gt;
        ///&lt;/div&gt;
        ///
        ///@Include(&quot;MultiPlug.Ext.IFTTT.IFTTTNavigation&quot;)
        ///
        ///&lt;secti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IFTTT {
            get {
                object obj = ResourceManager.GetObject("IFTTT", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid&quot;&gt;
        ///            &lt;div class=&quot;box&quot;&gt;
        ///                &lt;div class=&quot;span3&quot;&gt;
        ///                    &lt;a href=&quot;#&quot;&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Injector {
            get {
                return ResourceManager.GetString("Injector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;Injectors&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Injectors {
            get {
                return ResourceManager.GetString("Injectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to !function (t) { var i = [], e = &quot;dirty&quot;, n = &quot;clean&quot;, s = &quot;dirtyInitialValue&quot;, r = function (t) { var e; return i.forEach(function (i) { i.id === t &amp;&amp; (e = i) }), e }, a = function (i) { i.form.on(&quot;submit&quot;, function () { i.submitting = !0 }), i.options.preventLeaving &amp;&amp; t(window).on(&quot;beforeunload&quot;, function (t) { if (i.isDirty &amp;&amp; !i.submitting) return t.preventDefault(), i.options.leavingMessage }) }, o = function (t) { t.form.find(&quot;input, select, textarea&quot;).on(&quot;change.dirty click.dirty keyup.dirty keydown. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_dirty_min_js {
            get {
                return ResourceManager.GetString("jquery_dirty_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///@functions {
        ///    public string NavLocationIsHome()
        ///    {
        ///        return Model.Context.Paths.Current == Model.Context.Paths.Home ? &quot;active&quot; : string.Empty;
        ///    }
        ///
        ///    public string NavLocationIsTimers()
        ///    {
        ///        return Model.Context.Paths.Current.StartsWith(Model.Context.Paths.Home + &quot;timers&quot;) ? &quot;active&quot; : string.Empty;
        ///    }
        ///
        ///    public string NavLocationIsCaches()
        ///    {
        ///        return Model.Context.Paths.Current.StartsWith(Model.Context.Paths.Home + &quot;ca [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///@functions
        ///{
        ///    string isConnected(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;&lt;i class=\&quot;icon-ok icon-large\&quot;&gt;&lt;/i&gt;&quot; : &quot;&lt;i class=\&quot;icon-remove icon-large\&quot;&gt;&lt;/i&gt;&quot;;
        ///    }
        ///
        ///    string isEnabled(bool theValue)
        ///    {
        ///        return (theValue) ? &quot;checked&quot; : &quot;&quot;;
        ///    }
        ///}
        ///
        ///&lt;form action=&quot;&quot; method=&quot;post&quot; accept-charset=&quot;utf-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot;&gt;
        ///    &lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///        &lt;div class=&quot;row-fluid&quot;&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Timer {
            get {
                return ResourceManager.GetString("Timer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model MultiPlug.Base.Http.EdgeApp
        ///
        ///
        ///&lt;section class=&quot;row-fluid&quot;&gt;
        ///
        ///    &lt;div class=&quot;row-fluid&quot;&gt;
        ///        &lt;div class=&quot;box&quot;&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///                &lt;a href=&quot;#&quot;&gt;&lt;img alt=&quot;IFTTT Logo&quot; src=&quot;@Raw(Model.Context.Paths.Assets)images/ifttt.png&quot;&gt;&lt;/a&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span6&quot;&gt;
        ///                &lt;p style=&quot;font-size:22.75px; padding-top:10px; text-align: center;&quot;&gt;Timers&lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;span3&quot;&gt;
        ///            &lt;/div&gt;
        ///        &lt;/div&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Timers {
            get {
                return ResourceManager.GetString("Timers", resourceCulture);
            }
        }
    }
}
